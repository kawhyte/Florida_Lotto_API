{
    "swagger": "2.0",
    "info": {
      "version": "1.0.0",
      "title": "Lotto Scratch-off API",
      "description": "This is a Lottery Scratch-off ticket API",
      "license": {
        "name": "Created by Kenny",
        "url": "https://www.kennywhyte.com"
      }
    },
    "host": "lottoticketapi.herokuapp.com",
    "basePath": "/api/",
    "tags": [
      {
        "name": "Lottery Scratch-off tickets"
        
      }
    ],

    "schemes": [
        "http",
        "https"
      ],
      "consumes": [
        "application/json"
      ],
      "produces": [
        "application/json"
      ],
      "paths": {
        "/tickets": {
          "post": {
            "tags": [
              "Tickets"
            ],
            "summary": "Add a new ticket",
            "description": "Add a new ticket to the system",
            "parameters": [
              {
                "name": "ticket",
                "in": "body",
                "required":true,
                "description": "Ticket object that we want to create",
                "schema": {
                  "$ref": "#/definitions/Tickets"
                }
              }
            ],
            "produces": [
              "application/json"
            ],
            "responses": {
              "200": {
                "description": "New ticket created",
                "schema": {
                  "$ref": "#/definitions/Tickets"
                }
              }
            }
          },
          "get": {
            "tags": [
              "Tickets"
            ],
            "summary": "Get all tickets in the system",
            "responses": {
              "200": {
                "description": "OK",
                "schema": {
                  "$ref": "#/definitions/Tickets"
                }
              }
            }
          }
        },
        "/tickets/{ticketId}": {
          "parameters": [
            {
              "name": "ticketId",
              "in": "path",
              "required": true,
              "description": "ID of ticket that you want to locate",
              "type": "string"
            }
          ],
          "get": {
            "tags": [
              "Tickets"
            ],
            "summary": "Find ticket by ID",
            "responses": {
              "200": {
                "description": "Ticket found",
                "schema": {
                  "$ref": "#/definitions/Tickets"
                }
              },
              "400":{
                "description": "Invalid Id supplied"
              },
              "404":{
                "description": "Ticket not found"
              }
            }
          },
          "delete": {
            "summary": "Delete ticket with ID",
            "tags": [
              "Tickets"
            ],
            "responses": {
              "200": {
                "description": "Ticket deleted",
                "schema": {
                  "$ref": "#/definitions/Tickets"
                }
              },
              "400":{
                "description": "Invalid Id supplied"
              },
              "404":{
                "description": "Ticket not found"
              }
            }
          },
          "put": {
            "summary": "Update ticket with ID",
            "tags": [
              "Tickets"
            ],
            "parameters": [
              {
                "name": "ticket",
                "in": "body",
                "description": "Ticket with new values of properties",
                "schema": {
                  "$ref": "#/definitions/Tickets"
                }
              }
            ],
            "responses": {
              "200": {
                "description": "Ticket updated",
                "schema": {
                  "$ref": "#/definitions/Tickets"
                }
              }
            }
          }
        },

        "/users": {
          "post": {
            "tags": [
              "User"
            ],
            "summary": "Add a new user",
            "description": "Add a new user",
            "parameters": [
              {
                "name": "user",
                "in": "body",
                "required":true,
                "description": "User that we want to create",
                "schema": {
                  "$ref": "#/definitions/User"
                }
              }
            ],
            "produces": [
              "application/json"
            ],
            "responses": {
              "200": {
                "description": "New user created",
                "schema": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          }
         
        },

        "/auth": {
          "post": {
            "tags": [
              "User"
            ],
            "summary": "Logs user into system",
            "description": "Get the user who is currenlty logged in",
            "parameters": [
              {
                "name": "user",
                "in": "body",
                "description": "Current User",
                "schema": {
                  "$ref": "#/definitions/User"
                }
              }
            ],
            "produces": [
              "application/json"
            ],
            "responses": {
              "200": {
                "description": "User found",
                "schema": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          }
         
        },


        "/me": {
          "get": {
            "tags": [
              "User"
            ],
            "summary": "Get current user",
            "description": "Get the user who is currenlty logged in",
            "parameters": [
              {
                "name": "user",
                "in": "body",
                "description": "Current User",
                "schema": {
                  "$ref": "#/definitions/User"
                }
              }
            ],
            "produces": [
              "application/json"
            ],
            "responses": {
              "200": {
                "description": "User found",
                "schema": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          }
         
        }

      },
      "definitions": {
        "Tickets": {
          "properties": {
            
            "ticketNumber": {
              "type": "string",
              "uniqueItems": true
            },
            "ticketName": {
              "type": "string"
            },
            "topPrize": {
              "type": "string"
            },
            "topPrizeRemaining": {
                "type": "string"
              },
              "ticketCost": {
                "type": "string"
              }
          }
        },

          "User": {
            "properties": {
              "name": {
                "type": "string",
                "uniqueItems": true
              },
              "email": {
                "type": "string"
              },
              "password": {
                "type": "string"
              }
            }
          }

        
      }
    }